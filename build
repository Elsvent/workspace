#!/bin/bash
set -e

cmds="help sub go goutils image push all"
if test -n "$COMP_LINE"; then
  pre="${COMP_LINE##* }"
  for c in ${cmds}; do
    test -z "${pre}" -o "${c}" != "${c#${pre}}" && echo "$c"
  done
  exit
fi

ws=files/usr/share/workspace

case "$1" in

h*|usage)
  echo "sub   - update git submodules"
  echo "go    - pull the latest stable go"
  echo "utils - go install the utils from list"
  echo "image - docker build the image"
  echo "push  - docker push the image"
  echo "all   - sub, go, utils, image, push"
  ;;

sub*)
  echo "Updating submodules."
  #cd files/usr/share/workspace/.vimplugins
  #git submodule add  git@github.com:z0mbix/vim-shfmt.git
  #git submodule add  git@github.com:sheerun/vim-polyglot.git
  #git submodule add  git@github.com:vim-pandoc/vim-pandoc.git
  #git submodule add  git@github.com:rwxrob/vim-pandoc-syntax-simple.git
  #git submodule add  git@github.com:cespare/vim-toml.git
  #git submodule add  git@github.com:pangloss/vim-javascript.git
  #git submodule add  git@github.com:fatih/vim-go.git
  #git submodule add  git@github.com:PProvost/vim-ps1.git
  #git submodule add  git@github.com:tpope/vim-fugitive.git
  #git submodule add  git@github.com:morhetz/gruvbox.git
  #git submodule add  git@github.com:roxma/vim-tmux-clipboard.git
  #cd -
  git submodule update --recursive --remote
  rm -rf "$ws/.local/share/docker/completion" || true
  cp -r dot/docker/completion "$ws/.local/share/docker/completion"
  rm -rf "$ws/.config/lynx" || true
  cp -r dot/lynx "$ws/.config/lynx"
  rm -rf "$ws/.config/gh" || true
  cp -r dot/gh "$ws/.config/gh"
  rm -rf files/usr/share/figlet || true
  cp -r fonts/figlet files/usr/share/figlet
  rm -rf "$ws/.git-templates" || true
  cp -r dot/git/.git-templates "$ws/.git-templates"
  rm -rf "$ws/.local/bin/scripts" || true
  cp -r dot/scripts "$ws/.local/bin/scripts"
  cp dot/bin/linux/x86_64/tmatrix "$ws/.local/bin"
  cp dot/install/install* "$ws/.local/bin"
  cp dot/.bashrc dot/.dircolors dot/.inputrc dot/.profile "$ws/"
  cp dot/vim/.vimrc "$ws/"
  cp dot/tmux/.tmux.conf "$ws/"
  cp dot/tmux/.tmux-live.conf "$ws/"
  ;;

go)
  echo "Getting the latest go binaries."
  curl -sSLO https://get.golang.org/$(uname)/go_installer
  chmod +x go_installer
  test -e ~/.bash_profile && mv ~/.bash_profile ~/.bash_profile.orig
  test -d ~/.go && mv ~/.go ~/.go.orig
  touch ~/.bash_profile     # installer fucks with .bash_profile
  ./go_installer >/dev/null # shut the fuck up you piece of shit
  rm ./go_installer
  test -d ~/.go -a -d ./files/usr/local/go && rm -rf ./files/usr/local/go
  mv ~/.go ./files/usr/local/go && chmod -R +rw ./files/usr/local/go 
  test -e ~/.bash_profile.orig && mv ~/.bash_profile.orig ~/.bash_profile
  test -d ~/.go.orig && mv ~/.go.orig ~/.go
  ./files/usr/local/go/bin/go version
  ;;

goutils)
  echo "Installing go programs and utilities."
  set -e

  # assumes go 1.16+ has already been installed
  test -d ./go && chmod -R +w ./go && rm -rf ./go
  mkdir -p "$PWD/files/usr/local/bin"

  export GOROOT="$PWD/files/usr/local/go"
  export GOPATH="$PWD/go"
  export GOBIN="$PWD/files/usr/local/bin"
  export GOPROXY="https://proxy.golang.org,direct"
  export PATH="$GOROOT/bin:$PATH"

  echo '#######################################################'
  go version
  go env

  # fucked up from author using replace wrong
  # github.com/wagoodman/dive@latest

  declare -a packages=(
    github.com/mikefarah/yq/v4@latest
    sigs.k8s.io/kind@latest
    github.com/klauspost/asmfmt/cmd/asmfmt@master
    github.com/go-delve/delve/cmd/dlv@master
    github.com/kisielk/errcheck@master
    github.com/davidrjenni/reftools/cmd/fillstruct@master
    github.com/rogpeppe/godef@master
    golang.org/x/tools/cmd/goimports@master
    golang.org/x/lint/golint@master
    golang.org/x/tools/gopls@latest
    github.com/golangci/golangci-lint/cmd/golangci-lint@master
    github.com/fatih/gomodifytags@master
    golang.org/x/tools/cmd/gorename@master
    github.com/jstemmer/gotags@master
    golang.org/x/tools/cmd/guru@master
    github.com/josharian/impl@master
    github.com/fatih/motion@master
    github.com/koron/iferr@master
    github.com/raviqqe/muffet@latest
    github.com/schollz/browsersync@latest
    github.com/rwxrob/cmdbox-pomo/pomo@latest
    github.com/rwxrob/cmdbox-config/config@latest
    github.com/rwxrob/auth-go/cmd/auth@latest
    honnef.co/go/tools/cmd/staticcheck@latest
    honnef.co/go/tools/cmd/keyify@master
  )

  for i in ${packages[@]}; do
    echo '#######################################################'
    echo Installing: $i into $GOBIN
    go install $i
  done

  chmod -R +w ./go && rm -rf ./go
  ;;

image)
  echo "Creating the container image."
  docker build -t workspace -t rwxrob/workspace .
  ;;
 
push)
  echo "Pushing the container image to Docker."
  docker push rwxrob/workspace
  ;;

all)
  $0 sub
  $0 go
  $0 goutils
  $0 image
  $0 push
  ;;

*) $0 image ;;

esac

#  gruvbox
#  vim-fugitive
#  vim-go
#  vim-javascript
#  vim-pandoc
#  vim-pandoc-syntax-simple
#  vim-polyglot
#  vim-ps1
#  vim-shfmt
#  vim-tmux-clipboard
#  vim-toml


